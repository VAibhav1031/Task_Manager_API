[project]
name = "task_manager_api"
version = "0.2.1"
description = "A backend API service with authentication and deployment-ready structure."
authors = [
    { name = "Vaibhav"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "flask>=3.0",
    "flask-sqlalchemy>=3.1",
    "flask-jwt-extended>=4.6",
    "psycopg2-binary>=2.9", # PostgreSQL driver (if using Postgres)
    "python-dotenv>=1.0",
    "flask-bcrypt>=1.0.1",
    "flask-mail>=0.10.0",
    "flask-migrate>=4.1.0",
    "marshmallow>=4.0.1",
    "python-dateutil>=2.9.0.post0",
    "wheel>=0.45.1",
    "pytest>=8.4.1",
    "pluggy>=1.6.0",
    "pip>=25.2",
    "packaging>=25.0",
    "urllib3>=2.5.0",
    "pygments>=2.19.2",
    # "psycopg2>=2.9.10",
    "platformdirs>=4.3.8",
    "ruff>=0.12.9",
    "freezegun>=1.5.5",
    "requests>=2.32.5",
    "pathspec>=0.12.1",
    "pycparser>=2.23",
    "mypy-extensions>=1.1.0",
    "flask-jwt>=0.2.0",
    "pyjwt>=2.10.1",
    "redis>=6.4.0",
    "werkzeug>=3.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.1",
    "black>=24.0",
    "ruff>=0.4",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["task_manager_api"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
line-length = 88
select = ["E", "F", "B"]

